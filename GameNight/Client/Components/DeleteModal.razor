@inject HttpClient Http
@using System.Drawing;

@if (logg is not null)
{
﻿<div class="modal fade show" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title">Logg ID: @logg.Id</h4>
                    <h4 class="modal-title">Logg Date: @logg.DateOfEvent</h4>
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <div class="modal-body">
                    <h2>Deleate Logg?</h2>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn @(processing == true ? "disabled" : "")" @onclick="@ModalCancel">Cancel</button>
                    <button type="button" class="btn @(processing == true ? "disabled btn-warning" : "btn-primary")" @onclick="() => DeleteLogg(logg.Id)">@(processing == true ? "Processing..." : "OK")</button>
                </div>

            </div>
        </div>
    </div>
}
else if (game is not null)
{
﻿<div class="modal fade show" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title">Game Title: @game.Title</h4>
                    @* <h4 class="modal-title">Logg Date: @logg.DateOfEvent</h4> *@
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <div class="modal-body">
                    <h2>Deleate Game?</h2>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn @(processing == true ? "disabled" : "")" @onclick="@ModalCancel">Cancel</button>
                    <button type="button" class="btn @(processing == true ? "disabled btn-warning" : "btn-primary")" @onclick="() => DeleteGame(game.Id)">@(processing == true ? "Processing..." : "OK")</button>
                </div>

            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public Logg? logg { get; set; }
    [Parameter]
    public Game? game { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    public bool processing = false;

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }

    async Task DeleteLogg(int id)
    {
        processing = true;
        await Http.DeleteAsync($"api/logg/{id}");
        await ModalOk();
    }

    async Task DeleteGame(int id)
    {
        processing = true;
        await Http.DeleteAsync($"api/game/{id}");
        await ModalOk();
    }

}